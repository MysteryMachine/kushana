;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name kushana.camera, :imports nil, :requires {babylon babylon}, :uses nil, :defs {babel {:name kushana.camera/babel, :file "src/kushana/camera.cljs", :line 3, :column 1, :end-line 3, :end-column 11, :meta {:file "/Users/salbecker/Git/kushana/src/kushana/camera.cljs", :line 3, :column 6, :end-line 3, :end-column 11}}, set-options! {:protocol-inline nil, :meta {:file "/Users/salbecker/Git/kushana/src/kushana/camera.cljs", :line 5, :column 8, :end-line 5, :end-column 20, :private true, :arglists (quote ([camera options]))}, :private true, :name kushana.camera/set-options!, :variadic false, :file "src/kushana/camera.cljs", :end-column 20, :method-params ([camera options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([camera options]))}, free-camera {:protocol-inline nil, :meta {:file "/Users/salbecker/Git/kushana/src/kushana/camera.cljs", :line 12, :column 7, :end-line 12, :end-column 18, :arglists (quote ([scene name location & {:as options}])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(scene name location {:as options})], :arglists ([scene name location & {:as options}]), :arglists-meta (nil)}}, :name kushana.camera/free-camera, :variadic true, :file "src/kushana/camera.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(scene name location {:as options})], :arglists ([scene name location & {:as options}]), :arglists-meta (nil)}, :method-params [(scene name location {:as options})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists ([scene name location & {:as options}])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:attach-control :set-target}, :order [:set-target :attach-control]}, :doc nil}